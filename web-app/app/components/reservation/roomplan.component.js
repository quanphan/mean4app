System.register(['@angular/core', '../../services/auth.service', '../../services/common.service', '@angular/router', '../../components/commonfs'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, auth_service_1, common_service_1, router_1, commonfs_1;
    var RoomplanComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (auth_service_1_1) {
                auth_service_1 = auth_service_1_1;
            },
            function (common_service_1_1) {
                common_service_1 = common_service_1_1;
            },
            function (router_1_1) {
                router_1 = router_1_1;
            },
            function (commonfs_1_1) {
                commonfs_1 = commonfs_1_1;
            }],
        execute: function() {
            let RoomplanComponent = class RoomplanComponent {
                constructor(router, authService, commonService, datetime, elRef) {
                    this.router = router;
                    this.authService = authService;
                    this.commonService = commonService;
                    this.datetime = datetime;
                    this.elRef = elRef;
                    this.dayView = 15;
                    this.dates = [];
                    this.yearMonth = [];
                    this.res = { RoomNo: '201', RoomType: 'Superior Room', CompanyID: '' };
                    this.rooms = [
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '101' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '102' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '103' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '104' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '105' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '106' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '107' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '201' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '202' },
                        { Type: 'SUP', TypeName: 'Del', RoomNo: '203' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '204' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '205' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '206' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '207' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '301' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '302' },
                        { Type: 'SUP', TypeName: 'Sta', RoomNo: '303' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '304' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '305' },
                        { Type: 'SUP', TypeName: 'Del', RoomNo: '401' },
                        { Type: 'SUP', TypeName: 'Sup', RoomNo: '402' },
                        { Type: 'SUP', TypeName: 'Del', RoomNo: '403' },
                    ];
                    this.resSelect = { ID: '', RoomNo: '', FromDate: '', ToDate: '', tempID: '', selected: false };
                    this.resData = [
                        { ResID: '1', RoomNo: '102', FromDate: '8', ToDate: '11', Status: '3' },
                        { ResID: '2', RoomNo: '105', FromDate: '9', ToDate: '14', Status: '1' },
                        { ResID: '3', RoomNo: '203', FromDate: '11', ToDate: '16', Status: '1' },
                        { ResID: '4', RoomNo: '301', FromDate: '8', ToDate: '12', Status: '3' },
                        { ResID: '5', RoomNo: '201', FromDate: '14', ToDate: '15', Status: '1' },
                    ];
                    this._res = { ResID: '', RoomNo: '', FromDate: '', ToDate: '', Status: '' };
                    this.authService.setPageTitle('Room plans');
                    this.getDate(this.dayView);
                }
                getDate(days) {
                    let curDate = this.datetime.getCurDate();
                    let Ds = 0;
                    let MY;
                    for (var _i = -1; _i <= days; _i++) {
                        let _date = this.datetime.addDate(curDate, _i);
                        let _my = this.datetime.getYearMonth(_date);
                        let _month = this.datetime.getMonth(_date);
                        let _year = this.datetime.getYear(_date);
                        let _day = this.datetime.getDate(_date);
                        this.dates.push({ day: _day, month: _month, year: _year });
                        Ds++;
                        if (_i == -1) {
                            MY = _my;
                            this.yearMonth.push({ days: Ds, month: MY });
                            this.yesterday = _day;
                        }
                        else {
                            if (MY != _my) {
                                MY = _my;
                                this.yearMonth.push({ days: Ds, month: MY });
                                Ds = 1;
                            }
                            else {
                                for (var k = 0; k <= this.yearMonth.length; k++) {
                                    if (this.yearMonth[k].month == _my) {
                                        this.yearMonth[k].days = Ds;
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                IsSelectRoom(room, date) {
                    if (room == this.resSelect.RoomNo &&
                        parseInt(date.day) >= parseInt(this.resSelect.FromDate) && parseInt(date.day) <= parseInt(this.resSelect.ToDate)) {
                        return true;
                    }
                    return false;
                }
                CheckStatusRoom(room, date, status) {
                    let _tempRes = this.CheckRes(room, date);
                    if (_tempRes != null) {
                        if (_tempRes.Status == status)
                            return true;
                    }
                    return false;
                }
                resSelected() {
                    this.resSelect.selected = true;
                }
                resItem(room, date) {
                    let _tempRes = this.CheckRes(room, date);
                    if (_tempRes != null) {
                        this.resSelect.ID = _tempRes.ResID;
                        this.resSelect.RoomNo = _tempRes.RoomNo;
                        this.resSelect.FromDate = _tempRes.FromDate;
                        this.resSelect.ToDate = _tempRes.ToDate;
                        this.resSelect.selected = true;
                    }
                }
                setResUI(room, date) {
                    if (room == this.resSelect.RoomNo && this.resSelect.selected) {
                        if (parseInt(date.day) == parseInt(this.resSelect.FromDate)) {
                            let night = parseInt(this.resSelect.ToDate) - parseInt(this.resSelect.FromDate);
                            return night + 1;
                        }
                    }
                    let _tempRes = this.CheckRes(room, date);
                    if (_tempRes != null) {
                        let night = parseInt(_tempRes.ToDate) - parseInt(_tempRes.FromDate);
                        return night + 1;
                    }
                    return 1;
                }
                checkDateUISelect(room, date) {
                    if (room == this.resSelect.RoomNo && this.resSelect.selected) {
                        if (parseInt(date.day) > parseInt(this.resSelect.FromDate) && parseInt(date.day) <= parseInt(this.resSelect.ToDate)) {
                            return false;
                        }
                    }
                    let _tempRes = this.CheckRes(room, date);
                    if (_tempRes != null) {
                        if (parseInt(date.day) > parseInt(_tempRes.FromDate) && parseInt(date.day) <= parseInt(_tempRes.ToDate)) {
                            return false;
                        }
                    }
                    return true;
                }
                GetRes(room, date) {
                    let res = this._res;
                    let _tempRes = this.CheckRes(room, date);
                    if (_tempRes != null) {
                        return _tempRes;
                    }
                    if (room == this.resSelect.RoomNo && parseInt(date.day) == parseInt(this.resSelect.FromDate) && this.resSelect.selected) {
                        return this.resSelect;
                    }
                    return res;
                }
                CheckRes(room, date) {
                    for (var k = 0; k < this.resData.length; k++) {
                        if (this.resData[k].RoomNo == room && parseInt(date.day) == parseInt(this.resData[k].FromDate)) {
                            return this.resData[k];
                        }
                    }
                    return null;
                }
            };
            RoomplanComponent = __decorate([
                core_1.Component({
                    templateUrl: '/views/reservation/roomplan.html',
                    providers: [common_service_1.CommonService, commonfs_1.Datetime],
                }), 
                __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService, common_service_1.CommonService, commonfs_1.Datetime, core_1.ElementRef])
            ], RoomplanComponent);
            exports_1("RoomplanComponent", RoomplanComponent);
        }
    }
});

//# sourceMappingURL=data:application/json;base64,
